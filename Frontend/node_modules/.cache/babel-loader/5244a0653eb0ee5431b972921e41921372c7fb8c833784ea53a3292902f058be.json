{"ast":null,"code":"var _jsxFileName = \"/home/bai/Bureau/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport Nav from './Nav';\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState('Friends');\n  const [listFriends, setListFriends] = useState([]);\n  const [listPayment, setListPayment] = useState([]);\n  const [listTransactions, setListTransactions] = useState([]);\n  const inputRef = useRef(null);\n  const handleDeleteFriend = index => {\n    setListFriends(listFriends.filter((name, i) => i !== index));\n  };\n  const handleDeletePayment = index => {\n    setListPayment(listPayment.filter((payment, i) => i !== index));\n  };\n  const addPayment = paymentData => {\n    setListPayment([...listPayment, paymentData]);\n  };\n  const addFriend = () => {\n    const newFriendName = inputRef.current.value.trim();\n    if (newFriendName) {\n      setListFriends([...listFriends, newFriendName]);\n      inputRef.current.value = '';\n    }\n  };\n  const generateBill = () => {\n    let listBill = new Map();\n    for (let i = 0; i < listPayment.length; i++) {\n      if (listBill.has(listPayment[i].name)) {\n        listBill.set(listPayment[i].name, +listBill.get(listPayment[i].name) + +listPayment[i].cost);\n      } else {\n        listBill.set(listPayment[i].name, listPayment[i].cost);\n      }\n    }\n    return listBill;\n  };\n  const repartitionMoney = (listFriends, listPayment) => {\n    const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n    const part = totalCost / listFriends.length;\n    let listBill = generateBill();\n    let listTransactions = [];\n    let debtHolder = new Map();\n    let bankFriend = new Map();\n    for (let [name, cost] of listBill.entries()) {\n      if (Number(cost) < part) {\n        debtHolder.set(name, part - Number(cost));\n      } else {\n        bankFriend.set(name, Number(cost) - part);\n      }\n    }\n    let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n    let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n    console.log(debtHolder);\n    console.log(bankFriend);\n    for (let i = 0; i < sortedDebtHolders.length; i++) {\n      let [debtorName, debtAmount] = sortedDebtHolders[i];\n      if (debtAmount === 0) continue;\n      for (let j = 0; j < sortedBankFriends.length; j++) {\n        let [creditor, creditAmount] = sortedBankFriends[j];\n        if (creditAmount === 0) continue;\n        let transaction = {\n          debtHolder: debtorName,\n          bank: creditor\n        };\n        if (debtAmount > creditAmount) {\n          transaction.cost = creditAmount;\n          debtAmount -= creditAmount;\n          sortedBankFriends[j][1] = 0;\n        } else {\n          transaction.cost = debtAmount;\n          sortedBankFriends[j][1] -= debtAmount;\n          debtAmount = 0;\n        }\n        listTransactions.push(transaction);\n        sortedDebtHolders[i][1] = debtAmount;\n        if (debtAmount === 0) {\n          break;\n        }\n      }\n    }\n    console.log(listTransactions);\n    setListTransactions(listTransactions);\n  };\n  const handleRoute = e => {\n    setPage(e.target.value);\n  };\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return /*#__PURE__*/_jsxDEV(Friends, {\n          ref: inputRef,\n          addFriend: addFriend,\n          listFriends: listFriends,\n          handleDeleteFriend: handleDeleteFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 16\n        }, this);\n      case 'Expenses':\n        return /*#__PURE__*/_jsxDEV(Expenses, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          addPayment: addPayment,\n          handleDeletePayment: handleDeletePayment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 16\n        }, this);\n      case 'Transactions':\n        return /*#__PURE__*/_jsxDEV(Transactions, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          listTransactions: listTransactions,\n          repartitionMoney: repartitionMoney\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Friends, {\n          ref: inputRef,\n          addFriend: addFriend,\n          listFriends: listFriends,\n          handleDeleteFriend: handleDeleteFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      className: navbar,\n      handleRoute: handleRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }, this), render()]\n  }, void 0, true);\n}\n_s(App, \"36TJPkbnI3ZNzT6ztc8sZiD8hoQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","Nav","Friends","Expenses","Transactions","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","page","setPage","listFriends","setListFriends","listPayment","setListPayment","listTransactions","setListTransactions","inputRef","handleDeleteFriend","index","filter","name","i","handleDeletePayment","payment","addPayment","paymentData","addFriend","newFriendName","current","value","trim","generateBill","listBill","Map","length","has","set","get","cost","repartitionMoney","totalCost","reduce","sum","Number","part","debtHolder","bankFriend","entries","sortedDebtHolders","Array","from","sort","a","b","sortedBankFriends","console","log","debtorName","debtAmount","j","creditor","creditAmount","transaction","bank","push","handleRoute","e","target","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","children","className","navbar","_c","$RefreshReg$"],"sources":["/home/bai/Bureau/react-app/src/App.js"],"sourcesContent":["import React, { useState,useRef } from 'react';\n\n\nimport Nav from './Nav';\n\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\n\n\n\nfunction App() {\n  const [page,setPage] = useState('Friends');\n  const [listFriends,setListFriends] = useState([]);\n  const [listPayment,setListPayment] = useState([]);\n  const [listTransactions,setListTransactions] = useState([]);\n  \n  const inputRef = useRef(null);\n\n  const handleDeleteFriend = (index) => {\n    setListFriends(listFriends.filter((name,i) => i !== index));\n  }\n  \n  const handleDeletePayment = (index) => {\n    setListPayment(listPayment.filter((payment,i) => i !== index));\n  }\n\n  const addPayment = (paymentData) => {\n    setListPayment([...listPayment,paymentData]);\n  }\n\n  const addFriend = () => {\n    const newFriendName = inputRef.current.value.trim();\n    if (newFriendName) {\n      setListFriends([...listFriends, newFriendName]);\n      inputRef.current.value = '';\n    }\n  }\n  const generateBill = () => {\n    let listBill = new Map();\n    for (let i = 0; i < listPayment.length; i++) {\n        if (listBill.has(listPayment[i].name)) {\n          listBill.set(listPayment[i].name,+listBill.get(listPayment[i].name) + +listPayment[i].cost);\n        } else {\n          listBill.set(listPayment[i].name,listPayment[i].cost);\n        }\n      }\n    return listBill;\n  }\n\n  const repartitionMoney = (listFriends, listPayment) => {\n    const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n    const part = totalCost / listFriends.length;\n    let listBill = generateBill();\n    let listTransactions = [];\n    let debtHolder = new Map();\n    let bankFriend = new Map();\n  \n    for (let [name, cost] of listBill.entries()) {\n      if (Number(cost) < part) {\n        debtHolder.set(name, part - Number(cost));\n      } else {\n        bankFriend.set(name, Number(cost) - part);\n      }\n    }\n  \n    let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n    let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n    console.log(debtHolder);\n    console.log(bankFriend);\n    for (let i = 0; i < sortedDebtHolders.length; i++) {\n      let [debtorName, debtAmount] = sortedDebtHolders[i];\n      if (debtAmount === 0) continue;\n  \n      for (let j = 0; j < sortedBankFriends.length; j++) {\n        let [creditor, creditAmount] = sortedBankFriends[j];\n        if (creditAmount === 0) continue;\n  \n        let transaction = { debtHolder: debtorName, bank: creditor };\n  \n        if (debtAmount > creditAmount) {\n          transaction.cost = creditAmount;\n          debtAmount -= creditAmount;\n          sortedBankFriends[j][1] = 0;\n        } else {\n          transaction.cost = debtAmount;\n          sortedBankFriends[j][1] -= debtAmount;\n          debtAmount = 0;\n        }\n  \n        listTransactions.push(transaction);\n        sortedDebtHolders[i][1] = debtAmount;\n        if (debtAmount === 0) {\n          break;\n        }\n      }\n    }\n    console.log(listTransactions);\n    setListTransactions(listTransactions);\n  }\n\n  const handleRoute = (e) => {\n    setPage(e.target.value);\n  }\n\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return <Friends ref={inputRef} addFriend={addFriend} listFriends={listFriends} handleDeleteFriend={handleDeleteFriend}/>;\n      case 'Expenses':\n        return <Expenses listFriends={listFriends} listPayment={listPayment} addPayment={addPayment} handleDeletePayment={handleDeletePayment}/>;\n      case 'Transactions':\n        return <Transactions listFriends={listFriends} listPayment={listPayment} listTransactions={listTransactions} repartitionMoney={repartitionMoney}/>;\n      default:\n        return <Friends ref={inputRef} addFriend={addFriend} listFriends={listFriends} handleDeleteFriend={handleDeleteFriend}/>;\n    }\n    \n  }\n\n  return (\n    <>\n    <Nav className={navbar} handleRoute={handleRoute} />\n    {render()}\n    </>\n);\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}