{"ast":null,"code":"var _jsxFileName = \"/home/bai/Bureau/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from './Nav';\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState('Friends');\n  const [listPayment, setListPayment] = useState([]);\n  const [listTransactions, setListTransactions] = useState([]);\n  const handleDeletePayment = index => {\n    axios.delete(`http://localhost:8080/api/payments/${index}`).then(() => {\n      setListPayment(listPayment.filter((payment, i) => i !== index));\n    }).catch(error => {\n      console.error('There was an error deleting the payment!', error);\n    });\n  };\n  const addPayment = paymentData => {\n    axios.post('http://localhost:8080/api/payments', paymentData).then(response => {\n      setListPayment([...listPayment, paymentData]);\n    }).catch(error => {\n      console.error('There was an error adding the payment!', error);\n    });\n  };\n\n  // const generateBill = () => {\n  //   let listBill = new Map();\n  //   for (let i = 0; i < listPayment.length; i++) {\n  //       if (listBill.has(listPayment[i].name)) {\n  //         listBill.set(listPayment[i].name,+listBill.get(listPayment[i].name) + +listPayment[i].cost);\n  //       } else {\n  //         listBill.set(listPayment[i].name,listPayment[i].cost);\n  //       }\n  //     }\n  //   return listBill;\n  // }\n\n  // const repartitionMoney = (listFriends, listPayment) => {\n  //   const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n  //   const part = totalCost / listFriends.length;\n  //   let listBill = generateBill();\n  //   let listTransactions = [];\n  //   let debtHolder = new Map();\n  //   let bankFriend = new Map();\n\n  //   for (let [name, cost] of listBill.entries()) {\n  //     if (Number(cost) < part) {\n  //       debtHolder.set(name, part - Number(cost));\n  //     } else {\n  //       bankFriend.set(name, Number(cost) - part);\n  //     }\n  //   }\n\n  //   let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n  //   let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n  //   for (let i = 0; i < sortedDebtHolders.length; i++) {\n  //     let [debtorName, debtAmount] = sortedDebtHolders[i];\n  //     if (debtAmount === 0) continue;\n\n  //     for (let j = 0; j < sortedBankFriends.length; j++) {\n  //       let [creditor, creditAmount] = sortedBankFriends[j];\n  //       if (creditAmount === 0) continue;\n\n  //       let transaction = { debtHolder: debtorName, bank: creditor };\n\n  //       if (debtAmount > creditAmount) {\n  //         transaction.cost = creditAmount;\n  //         debtAmount -= creditAmount;\n  //         sortedBankFriends[j][1] = 0;\n  //       } else {\n  //         transaction.cost = debtAmount;\n  //         sortedBankFriends[j][1] -= debtAmount;\n  //         debtAmount = 0;\n  //       }\n\n  //       listTransactions.push(transaction);\n  //       sortedDebtHolders[i][1] = debtAmount;\n  //       if (debtAmount === 0) {\n  //         break;\n  //       }\n  //     }\n  //   }\n  //   console.log(listTransactions);\n  //   setListTransactions(listTransactions);\n  // }\n\n  const handleRoute = e => {\n    setPage(e.target.value);\n  };\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return /*#__PURE__*/_jsxDEV(Friends, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 16\n        }, this);\n      case 'Expenses':\n        return /*#__PURE__*/_jsxDEV(Expenses, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          addPayment: addPayment,\n          handleDeletePayment: handleDeletePayment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 16\n        }, this);\n      case 'Transactions':\n        return /*#__PURE__*/_jsxDEV(Transactions, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          listTransactions: listTransactions,\n          repartitionMoney: repartitionMoney\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Friends, {\n          ref: inputRef,\n          addFriend: addFriend,\n          listFriends: listFriends,\n          handleDeleteFriend: handleDeleteFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      handleRoute: handleRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 5\n    }, this), render()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PjKi+nmvWfkgn9R87VMORLE2LpA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Nav","Friends","Expenses","Transactions","jsxDEV","_jsxDEV","App","_s","page","setPage","listPayment","setListPayment","listTransactions","setListTransactions","handleDeletePayment","index","delete","then","filter","payment","i","catch","error","console","addPayment","paymentData","post","response","handleRoute","e","target","value","render","fileName","_jsxFileName","lineNumber","columnNumber","listFriends","repartitionMoney","ref","inputRef","addFriend","handleDeleteFriend","class","children","_c","$RefreshReg$"],"sources":["/home/bai/Bureau/react-app/src/App.js"],"sourcesContent":["import React, { useState,useRef,useEffect } from 'react';\nimport axios from 'axios';\n\n\nimport Nav from './Nav';\n\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\n\n\n\nfunction App() {\n  const [page,setPage] = useState('Friends');\n\n  const [listPayment,setListPayment] = useState([]);\n  const [listTransactions,setListTransactions] = useState([]);\n  \n\n\n\n  \n  \n\n \n  \n  const handleDeletePayment = (index) => {\n    axios.delete(`http://localhost:8080/api/payments/${index}`)\n    .then(() => {\n      setListPayment(listPayment.filter((payment,i) => i !== index));\n    })\n    .catch(error => {\n      console.error('There was an error deleting the payment!', error);\n    });\n    \n  }\n\n  const addPayment = (paymentData) => {\n    axios.post('http://localhost:8080/api/payments', paymentData)\n        .then(response => {\n          setListPayment([...listPayment,paymentData]);\n        })\n        .catch(error => {\n          console.error('There was an error adding the payment!', error);\n        });\n    \n  }\n\n  \n  // const generateBill = () => {\n  //   let listBill = new Map();\n  //   for (let i = 0; i < listPayment.length; i++) {\n  //       if (listBill.has(listPayment[i].name)) {\n  //         listBill.set(listPayment[i].name,+listBill.get(listPayment[i].name) + +listPayment[i].cost);\n  //       } else {\n  //         listBill.set(listPayment[i].name,listPayment[i].cost);\n  //       }\n  //     }\n  //   return listBill;\n  // }\n\n  // const repartitionMoney = (listFriends, listPayment) => {\n  //   const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n  //   const part = totalCost / listFriends.length;\n  //   let listBill = generateBill();\n  //   let listTransactions = [];\n  //   let debtHolder = new Map();\n  //   let bankFriend = new Map();\n  \n  //   for (let [name, cost] of listBill.entries()) {\n  //     if (Number(cost) < part) {\n  //       debtHolder.set(name, part - Number(cost));\n  //     } else {\n  //       bankFriend.set(name, Number(cost) - part);\n  //     }\n  //   }\n  \n  //   let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n  //   let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n  //   for (let i = 0; i < sortedDebtHolders.length; i++) {\n  //     let [debtorName, debtAmount] = sortedDebtHolders[i];\n  //     if (debtAmount === 0) continue;\n  \n  //     for (let j = 0; j < sortedBankFriends.length; j++) {\n  //       let [creditor, creditAmount] = sortedBankFriends[j];\n  //       if (creditAmount === 0) continue;\n  \n  //       let transaction = { debtHolder: debtorName, bank: creditor };\n  \n  //       if (debtAmount > creditAmount) {\n  //         transaction.cost = creditAmount;\n  //         debtAmount -= creditAmount;\n  //         sortedBankFriends[j][1] = 0;\n  //       } else {\n  //         transaction.cost = debtAmount;\n  //         sortedBankFriends[j][1] -= debtAmount;\n  //         debtAmount = 0;\n  //       }\n  \n  //       listTransactions.push(transaction);\n  //       sortedDebtHolders[i][1] = debtAmount;\n  //       if (debtAmount === 0) {\n  //         break;\n  //       }\n  //     }\n  //   }\n  //   console.log(listTransactions);\n  //   setListTransactions(listTransactions);\n  // }\n\n  const handleRoute = (e) => {\n    setPage(e.target.value);\n  }\n\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return <Friends/>;\n      case 'Expenses':\n        return <Expenses listFriends={listFriends} listPayment={listPayment} addPayment={addPayment} handleDeletePayment={handleDeletePayment}/>;\n      case 'Transactions':\n        return <Transactions listFriends={listFriends} listPayment={listPayment} listTransactions={listTransactions} repartitionMoney={repartitionMoney}/>;\n      default:\n        return <Friends ref={inputRef} addFriend={addFriend} listFriends={listFriends} handleDeleteFriend={handleDeleteFriend}/>;\n    }\n    \n  }\n\n  return (\n    <div class=\"container\">\n    <Nav handleRoute={handleRoute} />\n    {render()}\n    </div>\n);\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}