{"ast":null,"code":"var _jsxFileName = \"/home/bai/Bureau/react-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport Nav from './Nav';\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [page, setPage] = useState('Friends');\n  const [listFriends, setListFriends] = useState([]);\n  const [listPayment, setListPayment] = useState([]);\n  const [listTransactions, setListTransactions] = useState([]);\n  const inputRef = useRef(null);\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/friends').then(response => {\n      setListFriends(response.data);\n    }).catch(error => {\n      console.error('There was an error fetching the friends!', error);\n    });\n  }, []);\n  const handleDeleteFriend = friend => {\n    axios.delete(`http://localhost:8080/api/friends/${friend.idFriend}`).then(() => {\n      setListFriends(listFriends.filter(f => f.idFriend !== friend.idFriend));\n    }).catch(error => {\n      console.error('There was an error deleting the friend!', error);\n    });\n  };\n  const addFriend = () => {\n    const newFriendName = inputRef.current.value.trim();\n    if (newFriendName) {\n      const newFriend = {\n        nameFriend: newFriendName\n      };\n      axios.post('http://localhost:8080/api/friends', newFriend).then(response => {\n        setListFriends([...listFriends, response.data]);\n        inputRef.current.value = '';\n      }).catch(error => {\n        console.error('There was an error adding the friend!', error);\n      });\n    }\n  };\n  const generateBill = () => {\n    let listBill = new Map();\n    for (let i = 0; i < listPayment.length; i++) {\n      if (listBill.has(listPayment[i].name)) {\n        listBill.set(listPayment[i].name, +listBill.get(listPayment[i].name) + +listPayment[i].cost);\n      } else {\n        listBill.set(listPayment[i].name, listPayment[i].cost);\n      }\n    }\n    return listBill;\n  };\n  const repartitionMoney = (listFriends, listPayment) => {\n    const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n    const part = totalCost / listFriends.length;\n    let listBill = generateBill();\n    let listTransactions = [];\n    let debtHolder = new Map();\n    let bankFriend = new Map();\n    for (let [name, cost] of listBill.entries()) {\n      if (Number(cost) < part) {\n        debtHolder.set(name, part - Number(cost));\n      } else {\n        bankFriend.set(name, Number(cost) - part);\n      }\n    }\n    let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n    let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n    for (let i = 0; i < sortedDebtHolders.length; i++) {\n      let [debtorName, debtAmount] = sortedDebtHolders[i];\n      if (debtAmount === 0) continue;\n      for (let j = 0; j < sortedBankFriends.length; j++) {\n        let [creditor, creditAmount] = sortedBankFriends[j];\n        if (creditAmount === 0) continue;\n        let transaction = {\n          debtHolder: debtorName,\n          bank: creditor\n        };\n        if (debtAmount > creditAmount) {\n          transaction.cost = creditAmount;\n          debtAmount -= creditAmount;\n          sortedBankFriends[j][1] = 0;\n        } else {\n          transaction.cost = debtAmount;\n          sortedBankFriends[j][1] -= debtAmount;\n          debtAmount = 0;\n        }\n        listTransactions.push(transaction);\n        sortedDebtHolders[i][1] = debtAmount;\n        if (debtAmount === 0) {\n          break;\n        }\n      }\n    }\n    console.log(listTransactions);\n    setListTransactions(listTransactions);\n  };\n  const handleRoute = e => {\n    setPage(e.target.value);\n  };\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return /*#__PURE__*/_jsxDEV(Friends, {\n          ref: inputRef,\n          addFriend: addFriend,\n          listFriends: listFriends,\n          handleDeleteFriend: handleDeleteFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 16\n        }, this);\n      case 'Expenses':\n        return /*#__PURE__*/_jsxDEV(Expenses, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          setListPayment: setListPayment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 16\n        }, this);\n      case 'Transactions':\n        return /*#__PURE__*/_jsxDEV(Transactions, {\n          listFriends: listFriends,\n          listPayment: listPayment,\n          listTransactions: listTransactions,\n          repartitionMoney: repartitionMoney\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Friends, {\n          ref: inputRef,\n          addFriend: addFriend,\n          listFriends: listFriends,\n          handleDeleteFriend: handleDeleteFriend\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      handleRoute: handleRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this), render()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"/j7YHZFrv4D9SHXvuY0bokJpsc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Nav","Friends","Expenses","Transactions","jsxDEV","_jsxDEV","App","_s","page","setPage","listFriends","setListFriends","listPayment","setListPayment","listTransactions","setListTransactions","inputRef","get","then","response","data","catch","error","console","handleDeleteFriend","friend","delete","idFriend","filter","f","addFriend","newFriendName","current","value","trim","newFriend","nameFriend","post","generateBill","listBill","Map","i","length","has","name","set","cost","repartitionMoney","totalCost","reduce","sum","payment","Number","part","debtHolder","bankFriend","entries","sortedDebtHolders","Array","from","sort","a","b","sortedBankFriends","debtorName","debtAmount","j","creditor","creditAmount","transaction","bank","push","log","handleRoute","e","target","render","ref","fileName","_jsxFileName","lineNumber","columnNumber","className","children","_c","$RefreshReg$"],"sources":["/home/bai/Bureau/react-app/src/App.js"],"sourcesContent":["import React, { useState,useRef,useEffect } from 'react';\nimport axios from 'axios';\n\n\nimport Nav from './Nav';\n\nimport Friends from './pages/Friends';\nimport Expenses from './pages/Expenses';\nimport Transactions from './pages/Transactions';\n\n\n\nfunction App() {\n  const [page,setPage] = useState('Friends');\n  const [listFriends,setListFriends] = useState([]);\n  const [listPayment,setListPayment] = useState([]);\n  const [listTransactions,setListTransactions] = useState([]);\n  \n  const inputRef = useRef(null);\n\n\n  useEffect(() => {\n    axios.get('http://localhost:8080/api/friends')\n        .then(response => {\n          setListFriends(response.data);\n        })\n        .catch(error => {\n            console.error('There was an error fetching the friends!', error);\n        });\n  }, []);\n  \n\n  const handleDeleteFriend = (friend) => {\n    axios.delete(`http://localhost:8080/api/friends/${friend.idFriend}`)\n      .then(() => {\n        setListFriends(listFriends.filter((f) => f.idFriend !== friend.idFriend));\n      })\n      .catch(error => {\n        console.error('There was an error deleting the friend!', error);\n      });\n  };\n\n  const addFriend = () => {\n    const newFriendName = inputRef.current.value.trim();\n    if (newFriendName) {\n      const newFriend = {\n        nameFriend: newFriendName\n      };\n\n      axios.post('http://localhost:8080/api/friends', newFriend)\n        .then(response => {\n          setListFriends([...listFriends, response.data]);\n          inputRef.current.value = ''; \n        })\n        .catch(error => {\n          console.error('There was an error adding the friend!', error);\n        });\n    }\n  }\n\n\n  const generateBill = () => {\n    let listBill = new Map();\n    for (let i = 0; i < listPayment.length; i++) {\n        if (listBill.has(listPayment[i].name)) {\n          listBill.set(listPayment[i].name,+listBill.get(listPayment[i].name) + +listPayment[i].cost);\n        } else {\n          listBill.set(listPayment[i].name,listPayment[i].cost);\n        }\n      }\n    return listBill;\n  }\n\n  const repartitionMoney = (listFriends, listPayment) => {\n    const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n    const part = totalCost / listFriends.length;\n    let listBill = generateBill();\n    let listTransactions = [];\n    let debtHolder = new Map();\n    let bankFriend = new Map();\n  \n    for (let [name, cost] of listBill.entries()) {\n      if (Number(cost) < part) {\n        debtHolder.set(name, part - Number(cost));\n      } else {\n        bankFriend.set(name, Number(cost) - part);\n      }\n    }\n  \n    let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n    let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n    for (let i = 0; i < sortedDebtHolders.length; i++) {\n      let [debtorName, debtAmount] = sortedDebtHolders[i];\n      if (debtAmount === 0) continue;\n  \n      for (let j = 0; j < sortedBankFriends.length; j++) {\n        let [creditor, creditAmount] = sortedBankFriends[j];\n        if (creditAmount === 0) continue;\n  \n        let transaction = { debtHolder: debtorName, bank: creditor };\n  \n        if (debtAmount > creditAmount) {\n          transaction.cost = creditAmount;\n          debtAmount -= creditAmount;\n          sortedBankFriends[j][1] = 0;\n        } else {\n          transaction.cost = debtAmount;\n          sortedBankFriends[j][1] -= debtAmount;\n          debtAmount = 0;\n        }\n  \n        listTransactions.push(transaction);\n        sortedDebtHolders[i][1] = debtAmount;\n        if (debtAmount === 0) {\n          break;\n        }\n      }\n    }\n    console.log(listTransactions);\n    setListTransactions(listTransactions);\n  }\n\n  const handleRoute = (e) => {\n    setPage(e.target.value);\n  }\n\n  const render = () => {\n    switch (page) {\n      case 'Friends':\n        return <Friends ref={inputRef} addFriend={addFriend} listFriends={listFriends} handleDeleteFriend={handleDeleteFriend}/>;\n      case 'Expenses':\n        return <Expenses listFriends={listFriends} listPayment={listPayment} setListPayment={setListPayment}/>;\n      case 'Transactions':\n        return <Transactions listFriends={listFriends} listPayment={listPayment} listTransactions={listTransactions} repartitionMoney={repartitionMoney}/>;\n      default:\n        return <Friends ref={inputRef} addFriend={addFriend} listFriends={listFriends} handleDeleteFriend={handleDeleteFriend}/>;\n    }\n    \n  }\n\n  return (\n    <div className=\"container\">\n    <Nav handleRoute={handleRoute} />\n    {render()}\n    </div>\n);\n}\n\nexport default App;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}