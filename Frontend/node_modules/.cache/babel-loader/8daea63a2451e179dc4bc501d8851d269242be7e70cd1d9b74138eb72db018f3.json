{"ast":null,"code":"var _jsxFileName = \"/home/bai/Bureau/react-app/src/pages/Transactions.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction repartitionMoney(listFriends, listPayment, generateBill) {\n  const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n  const part = totalCost / listFriends.length;\n  let listBill = generateBill();\n  let listTransactions = [];\n  let debtHolder = new Map();\n  let bankFriend = new Map();\n  for (let [name, cost] of listBill.entries()) {\n    if (Number(cost) < part) {\n      debtHolder.set(name, part - Number(cost));\n    } else {\n      bankFriend.set(name, Number(cost) - part);\n    }\n  }\n  let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n  let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n  for (let i = 0; i < sortedDebtHolders.length; i++) {\n    let [debtorName, debtAmount] = sortedDebtHolders[i];\n    if (debtAmount === 0) continue;\n    for (let j = 0; j < sortedBankFriends.length; j++) {\n      let [creditor, creditAmount] = sortedBankFriends[j];\n      if (creditAmount === 0) continue;\n      let transaction = {\n        debtHolder: debtorName,\n        bank: creditor\n      };\n      if (debtAmount > creditAmount) {\n        transaction.cost = creditAmount;\n        debtAmount -= creditAmount;\n        sortedBankFriends[j][1] = 0;\n      } else {\n        transaction.cost = debtAmount;\n        sortedBankFriends[j][1] -= debtAmount;\n        debtAmount = 0;\n      }\n      listTransactions.push(transaction);\n      sortedDebtHolders[i][1] = debtAmount;\n      if (debtAmount === 0) {\n        break;\n      }\n    }\n  }\n  console.log(\"Debt Holders Sorted:\", new Map(sortedDebtHolders));\n  console.log(\"Bank Friends Sorted:\", new Map(sortedBankFriends));\n  console.log(\"List of Transactions:\", listTransactions);\n}\nfunction Transactions({\n  listFriends,\n  listPayment,\n  generateBill\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5 container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"col-4 btn btn-primary\",\n      onClick: () => repartitionMoney(listFriends, listPayment, generateBill),\n      children: \"Generate Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 7\n  }, this);\n}\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","repartitionMoney","listFriends","listPayment","generateBill","totalCost","reduce","sum","payment","Number","cost","part","length","listBill","listTransactions","debtHolder","Map","bankFriend","name","entries","set","sortedDebtHolders","Array","from","sort","a","b","sortedBankFriends","i","debtorName","debtAmount","j","creditor","creditAmount","transaction","bank","push","console","log","Transactions","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bai/Bureau/react-app/src/pages/Transactions.js"],"sourcesContent":["import React from 'react';\n\nfunction repartitionMoney(listFriends, listPayment, generateBill) {\n  const totalCost = listPayment.reduce((sum, payment) => sum + Number(payment.cost), 0);\n  const part = totalCost / listFriends.length;\n  let listBill = generateBill();\n  let listTransactions = [];\n  let debtHolder = new Map();\n  let bankFriend = new Map();\n\n  for (let [name, cost] of listBill.entries()) {\n    if (Number(cost) < part) {\n      debtHolder.set(name, part - Number(cost));\n    } else {\n      bankFriend.set(name, Number(cost) - part);\n    }\n  }\n\n  let sortedDebtHolders = Array.from(debtHolder.entries()).sort((a, b) => b[1] - a[1]);\n  let sortedBankFriends = Array.from(bankFriend.entries()).sort((a, b) => b[1] - a[1]);\n\n  for (let i = 0; i < sortedDebtHolders.length; i++) {\n    let [debtorName, debtAmount] = sortedDebtHolders[i];\n    if (debtAmount === 0) continue;\n\n    for (let j = 0; j < sortedBankFriends.length; j++) {\n      let [creditor, creditAmount] = sortedBankFriends[j];\n      if (creditAmount === 0) continue;\n\n      let transaction = { debtHolder: debtorName, bank: creditor };\n\n      if (debtAmount > creditAmount) {\n        transaction.cost = creditAmount;\n        debtAmount -= creditAmount;\n        sortedBankFriends[j][1] = 0;\n      } else {\n        transaction.cost = debtAmount;\n        sortedBankFriends[j][1] -= debtAmount;\n        debtAmount = 0;\n      }\n\n      listTransactions.push(transaction);\n      sortedDebtHolders[i][1] = debtAmount;\n      if (debtAmount === 0) {\n        break;\n      }\n    }\n  }\n\n  console.log(\"Debt Holders Sorted:\", new Map(sortedDebtHolders));\n  console.log(\"Bank Friends Sorted:\", new Map(sortedBankFriends));\n  console.log(\"List of Transactions:\", listTransactions);\n}\n\n\nfunction Transactions({listFriends,listPayment,generateBill}){\n    return (\n      <div className='mt-5 container'>\n        <button className='col-4 btn btn-primary' onClick={() => repartitionMoney(listFriends,listPayment,generateBill)}>Generate Invoice</button>\n      </div>\n    )\n  }\n\nexport default Transactions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}