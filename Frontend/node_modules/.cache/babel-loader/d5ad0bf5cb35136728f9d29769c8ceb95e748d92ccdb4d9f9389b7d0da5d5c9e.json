{"ast":null,"code":"var _jsxFileName = \"/home/bai/Bureau/react-app/src/pages/Transactions.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction repartitionMoney(listFriends, listPayment, generateBill) {\n  const totalCost = listPayment.reduce((sum, payment) => sum += Number(payment.cost), 0);\n  const part = totalCost / listFriends.length;\n  let listBill = generateBill();\n  let listTransactions = [];\n  let debtHolder = new Map();\n  let bankFriend = new Map();\n  for (let [name, cost] of listBill.entries()) {\n    if (Number(cost) < part) {\n      debtHolder.set(name, part - Number(cost));\n    } else {\n      bankFriend.set(name, Number(cost) - part);\n    }\n  }\n  let sortedByValue = Array.from(debtHolder.entries()).sort((a, b) => {\n    return b[1] - a[1];\n  });\n  let debtHolderSorted = new Map(sortedByValue);\n  let bankSortedByValue = Array.from(bankFriend.entries()).sort((a, b) => {\n    return b[1] - a[1];\n  });\n  let bankFriendSorted = new Map(bankSortedByValue);\n  console.log(debtHolderSorted);\n  for (let [name, cost] of debtHolderSorted.entries()) {\n    for (let [nameBank, costBank] of bankFriendSorted.entries()) {\n      console.log(\"le costBank: \" + costBank);\n      let transaction = {};\n      transaction.debtHolder = name;\n      transaction.bank = nameBank;\n      if (cost > costBank) {\n        transaction.cost = cost - costBank;\n        debtHolderSorted.set(name, cost - costBank);\n        listTransactions.push(transaction);\n      } else {\n        transaction.cost = cost;\n        debtHolderSorted.set(name, 0);\n        bankFriendSorted.set(nameBank, costBank - cost);\n        listTransactions.push(transaction);\n        break;\n      }\n    }\n  }\n  console.log(listTransactions);\n}\nfunction Transactions({\n  listFriends,\n  listPayment,\n  generateBill\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5 container\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"col-4 btn btn-primary\",\n      onClick: () => repartitionMoney(listFriends, listPayment, generateBill),\n      children: \"Generate Invoice\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n}\n_c = Transactions;\nexport default Transactions;\nvar _c;\n$RefreshReg$(_c, \"Transactions\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","repartitionMoney","listFriends","listPayment","generateBill","totalCost","reduce","sum","payment","Number","cost","part","length","listBill","listTransactions","debtHolder","Map","bankFriend","name","entries","set","sortedByValue","Array","from","sort","a","b","debtHolderSorted","bankSortedByValue","bankFriendSorted","console","log","nameBank","costBank","transaction","bank","push","Transactions","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/bai/Bureau/react-app/src/pages/Transactions.js"],"sourcesContent":["import React from 'react';\n\nfunction repartitionMoney(listFriends,listPayment,generateBill){\n  const totalCost = listPayment.reduce((sum,payment) => sum += Number(payment.cost),0);\n  const part = totalCost/listFriends.length;\n  let listBill = generateBill();\n  let listTransactions = [];\n  let debtHolder = new Map();\n  let bankFriend = new Map();\n\n  for (let [name,cost] of listBill.entries()) {\n    if (Number(cost) < part) {\n      debtHolder.set(name,part-Number(cost));\n    } else {\n      bankFriend.set(name,Number(cost)-part);\n    }\n  }\n  let sortedByValue = Array.from(debtHolder.entries()).sort((a, b) => {\n    return b[1] - a[1];\n  });\n  let debtHolderSorted = new Map(sortedByValue);\n  let bankSortedByValue = Array.from(bankFriend.entries()).sort((a, b) => {\n    return b[1] - a[1];\n  });\n  let bankFriendSorted = new Map(bankSortedByValue);\n  console.log(debtHolderSorted);\n  for(let [name,cost] of debtHolderSorted.entries()){\n    for(let [nameBank,costBank] of bankFriendSorted.entries()){\n      console.log(\"le costBank: \"+ costBank);\n      let transaction = {};\n      transaction.debtHolder = name;\n      transaction.bank = nameBank;\n      if (cost > costBank) {\n        transaction.cost = cost - costBank;\n        debtHolderSorted.set(name,cost - costBank);\n        listTransactions.push(transaction);\n      } else {\n        transaction.cost = cost;\n        debtHolderSorted.set(name,0);\n        bankFriendSorted.set(nameBank,costBank - cost);\n        listTransactions.push(transaction);\n        break;\n      }\n      \n    }\n  }\n  console.log(listTransactions);\n}\n\nfunction Transactions({listFriends,listPayment,generateBill}){\n    return (\n      <div className='mt-5 container'>\n        <button className='col-4 btn btn-primary' onClick={() => repartitionMoney(listFriends,listPayment,generateBill)}>Generate Invoice</button>\n      </div>\n    )\n  }\n\nexport default Transactions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}